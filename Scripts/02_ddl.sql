CREATE TABLE MEMBER (
	name varchar2(10),
	userid varchar2(10),
	pwd varchar2(10),
	email varchar2(20),
	phone char(13),
	admin number(1) DEFAULT 0, -- 0: 사용자, 1: 관리자
	joinDate DATE DEFAULT sysdate,
	PRIMARY key(userid)
);

DROP TABLE "MEMBER";

SELECT * FROM MEMBER;

SELECT *
  FROM USER_TABLES
 WHERE TABLE_NAME = 'MEMBER';
 
-- 접속한 계정의 테이블별 컬럼 조회 
SELECT *
  FROM USER_TAB_COLUMNS
 WHERE TABLE_NAME in('MEMBER');

-- 접속한 계정의 테이블별 제약조건 검색
SELECT *
  FROM USER_CONSTRAINTS
 WHERE TABLE_NAME in('MEMBER');

/* 20으로 변경 */
ALTER TABLE MEMBER
MODIFY (name VARCHAR2(20));

-- TITLE 테이블 생성
CREATE TABLE TITLE (
    TITLE_NO   NUMBER(2)   CONSTRAINT TITLE_TITLENO_PK   PRIMARY KEY,
    TITLE_NAME VARCHAR2(10) CONSTRAINT TITLE_TITLENAME_NN CHECK(TITLE_NAME IS NOT NULL) CONSTRAINT TITLE_TITLENAME_UK UNIQUE
);

-- DEPARTMENT 테이블 생성
CREATE TABLE DEPARTMENT (
    DEPT_NO     NUMBER(2),
    DEPT_NAME   VARCHAR2(20),
    FLOOR       NUMBER(2) DEFAULT 1,
    CONSTRAINT  DEPARTMENT_DEPTNO_PK       PRIMARY KEY (DEPT_NO),
    CONSTRAINT  DEPARTMENT_DEPTNAME_UK     UNIQUE(DEPT_NAME),
    CONSTRAINT  DEPARTMENT_DEPTNAME_NN     CHECK(DEPT_NAME IS NOT NULL)
);

DROP TABLE EMPLOYEE;

SELECT *
FROM EMPLOYEE;

-- EMPLOYEE 테이블 생성
CREATE TABLE EMPLOYEE (
    EMP_NO   NUMBER,
    EMP_NAME VARCHAR2(20),
    TNO     NUMBER DEFAULT 1,
    MANAGER NUMBER,
    SALARY  NUMBER,
    DNO NUMBER DEFAULT 1,
    EMAIL VARCHAR2(60) NOT NULL,
    PASSWD VARCHAR2(60) NOT NULL,
    REGDATE DATE DEFAULT SYSDATE,
    TEL CHAR(13),
    PIC_URL VARCHAR2(100)
);

ALTER TABLE EMPLOYEE ADD CONSTRAINT EMPLOYEE_EMPNO_PK   PRIMARY KEY (EMP_NO);
ALTER TABLE EMPLOYEE ADD CONSTRAINT EMPLOYEE_EMPNAME_UK UNIQUE (EMP_NAME);
ALTER TABLE EMPLOYEE ADD CONSTRAINT EMPLOYEE_EMPNAME_NN CHECK(EMP_NAME IS NOT NULL);
ALTER TABLE EMPLOYEE ADD CONSTRAINT EMPLOYEE_TNO_FK     FOREIGN KEY (TNO)     REFERENCES TITLE(TITLE_NO) ON DELETE SET NULL;
ALTER TABLE EMPLOYEE ADD CONSTRAINT EMPLOYEE_MANAGER_FK FOREIGN KEY (MANAGER) REFERENCES EMPLOYEE(EMP_NO);
ALTER TABLE EMPLOYEE ADD CONSTRAINT EMPLOYEE_SALARY_CK  CHECK (SALARY < 6000000);
ALTER TABLE EMPLOYEE ADD CONSTRAINT EMPLOYEE_DNO_CK     CHECK (DNO > 0);
ALTER TABLE EMPLOYEE ADD CONSTRAINT EMPLOYEE_DNO_FK     FOREIGN KEY (DNO) REFERENCES DEPARTMENT(DEPT_NO) ON DELETE CASCADE;

-------------------------------------------------------------

CREATE TABLE PRODUCT (
	code		NUMBER(5),		/* 코드 */
	name		VARCHAR2(100),	/* 이름 */
	price		NUMBER(8),		/* 가격 */
	pictureurl	VARCHAR2(50),	/* 사진 경로 */
	description	VARCHAR(1000),	/* 설명 */
	PRIMARY KEY (code)
);

SELECT *
  FROM PRODUCT;

CREATE SEQUENCE PRODUCT_SEQ
 START WITH 1
 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TRI_PRODUCT_CODE_AUTOSEQ
BEFORE INSERT ON PRODUCT
FOR EACH ROW
BEGIN
	IF inserting AND :NEW.CODE IS NULL THEN
		SELECT PRODUCT_SEQ.NEXTVAL INTO :NEW.CODE FROM DUAL;
	END IF;
END;

DROP TRIGGER TRI_PRODUCT_CODE_AUTOSEQ;
DROP SEQUENCE PRODUCT_SEQ;

------------------------------------------------------

CREATE TABLE BOARD(
	num			NUMBER(5)		PRIMARY KEY,
	pass		VARCHAR2(30),
	name		VARCHAR2(30),
	email		VARCHAR2(30),
	title		VARCHAR2(50),
	content		VARCHAR2(1000),
	readcount	NUMBER(4)		DEFAULT 0,
	writedate	DATE			DEFAULT SYSDATE
);

CREATE SEQUENCE BOARD_SEQ
 START WITH 1
 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TRI_BOARD_NUM_AUTOSEQ
BEFORE INSERT ON BOARD
FOR EACH ROW
BEGIN
	IF inserting AND :NEW.NUM IS NULL THEN
		SELECT BOARD_SEQ.NEXTVAL INTO :NEW.NUM FROM DUAL;
	END IF;
END;

DROP TRIGGER TRI_BOARD_NUM_AUTOSEQ;
DROP SEQUENCE BOARD_SEQ;
